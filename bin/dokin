#!/usr/bin/env php
<?php

$sDokinPath = dirname(dirname(__FILE__));

$argc = $_SERVER['argc'];
$argv = $_SERVER['argv'];

if ($argc!=2) {
    usage();
    exit;
}

// Determine Project Path
$sPrjPath = $argv[1];
$sPrjParentPath = realpath(dirname($argv[1]));
$sPrjPath = $sPrjParentPath.'/'.basename($sPrjPath);
$sPrj = basename($sPrjPath);

_P('Project Path: '.$sPrjPath);
_P('Parent Path : '.$sPrjParentPath);
_P('Project Name: '.$sPrj);
_P('Dokin Path  : '.$sDokinPath);

if (file_exists($sPrjPath)) {
    _P($sPrjPath.' already exists');
    exit;
}

_P('Generating '.$sPrj);

# Create dokin
$cmd = 'mkdir -p '.$sPrjPath.'/dokin';
shell_exec($cmd);

# copy dokin itself
clean_r_copy($sDokinPath, $sPrjPath.'/dokin', array('tmpl'));

# create required subdirectory
$aDirs = array( 'config', 'controllers', 'docroot', 'layouts', 'lib', 'logs', 'models', 'templates', );
foreach( $aDirs as $sDir) {
    shell_exec('mkdir -p '.$sPrjPath.'/app/'.$sDir);
}

shell_exec('chmod a+w '.$sPrjPath.'/app/logs');

# copy content of tmpl in docroot
clean_r_copy($sDokinPath.'/bin/tmpl/docroot', $sPrjPath.'/app/docroot');

# copy content of tmpl/config to config 
clean_r_copy($sDokinPath.'/bin/tmpl/config', $sPrjPath.'/app/config');

# replace __prj__ with $prj
if (file_exists($sPrjPath.'/app/config/DBConfig.php')) {
    $sContent = file_get_contents($sPrjPath.'/app/config/DBConfig.php');
    $sContent = str_replace('__prj__', $sPrj, $sContent);
    file_put_contents($sPrjPath.'/app/config/DBConfig.php', $sContent);
}

function clean_r_copy($src,$dst,$excl = array()) 
{
    if ($src[strlen($src)-1] != '/') {
        $src .= '/';
    }

    if ($dst[strlen($dst)-1] != '/') {
        $dst .= '/';
    }

    $dh = opendir($src);
    if (!$dh) {
        _P("Could not find myself");
        exit;
    }
    while( ($file=readdir($dh)) != false ) {
        if ($file != '.' && $file != '..' && $file != '.svn') {
            $parts = explode('/',$dst);
            array_shift($parts);
            array_shift($parts);
            $n = implode('/',$parts);
            if (!in_array($file,$excl) && !in_array($n.$file,$excl)) {
                if (is_dir($src.$file)) {
                    clean_r_copy($src.$file,$dst.$file,$excl);
                } else {
                    if (!file_exists($dst)) {
                        shell_exec("mkdir -p $dst");
                    }
                    shell_exec("cp -a $src$file $dst$file");
                }
            }
        }
    }
}



function usage() 
{
    print "dokin <project>\n";
}

function _P($msg) 
{
    print "$msg\n";
}

